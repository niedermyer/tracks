/*
 * This is a declarations file that'll be imported into all other stylesheets.
 *
 * This file is used to define project-wide custom variables and Bootstrap
 * variable overrides. We also use this file to define custom mixins. One of
 * the most common uses is to define the base colors for the design and then
 * redefine Bootstraps $brand-primary variable
 *
 * The @import method allows us to take advantage of variables and mixins.
 *
 */

// Custom Theme Colors & Variables
$off-white: #fafafa;

// Bootstrap Variable Overrides
$brand-primary: #1c67e3;
$brand-secondary: #036;

$gray-white: $off-white;
$gray-lightest: #e7e7e7;
$gray-lighter: #d2d2d2;
$gray-light: #a2aaae;
$divider-gray: #9c9c9c;
$gray: #80878c;
$gray-dark: #676767;
$gray-darker: #373738;
$gray-darkest: #2e2e2e;


// Fonts
$font-family-sans-serif: 'Open Sans', 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
$font-family-sans-serif-italic: 'Open Sans', 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
$font-family-sans-serif-bold: 'Open Sans', 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
$font-family-serif: 'Open Sans', 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
$headings-font-family: $font-family-serif;
$font-size-base: 14px;
$font-size-h1: 2.055556em;
$font-size-h2: 1.666667em;
$font-size-h3: 1.166667em;
$font-size-h4: 1em;
$font-size-base-28px: 1.555556em;
$font-size-base-26px: 1.444444em;
$font-size-base-25_5px: 1.416667em;
$font-size-base-23px: 1.277778em;
$font-size-base-16px: 0.888889em;
$font-size-base-15px: 0.833333em;
$font-size-base-14px: 0.777778em;
$font-size-base-12px: 0.666667em;
$btn-icon-font-size: 0.833333em;
$font-weight-normal: 300;
$font-weight-bold: 600;
$line-height-base: 1.51666667;
$headings-font-weight: $font-weight-normal;
$headings-color: $brand-secondary;
$btn-font-weight: $font-weight-normal;
$alert-link-font-weight: $font-weight-normal;
$badge-font-weight: $font-weight-normal;
$close-font-weight: $font-weight-normal;

//$line-height-computed: floor(($font-size-base * $line-height-base));

$text-color: $gray-darkest;


// Navbar
$navbar-margin-bottom: 15px;
$navbar-border-radius: 0;
$navbar-height: 60px;
//$navbar-padding-vertical: ((($navbar-height - $line-height-computed) - 4) / 2); // we substract 4 to allow for borders

// Navbar default
$navbar-default-bg: transparent;
$navbar-default-border: transparent;
$navbar-default-link-color: $gray;
$navbar-default-link-hover-color: $brand-primary;
$navbar-default-link-active-color: $brand-secondary;
$navbar-default-toggle-hover-bg: $off-white;
$navbar-default-toggle-icon-bar-bg: $brand-secondary;
$navbar-default-toggle-border-color: transparent;
$navbar-default-brand-color: $brand-primary;


$input-bg: $off-white;
$input-border: $gray-lighter;
$input-group-addon-bg: $input-bg;
$input-group-addon-border-color: $input-bg;
$input-color: $brand-secondary;
$input-color-placeholder: $gray-lighter;
$input-border-radius: 0;
$input-border-radius-small: $input-border-radius;
$input-border-radius-large: $input-border-radius;
$input-height-base: 37px;
$legend-color: $brand-secondary;
$legend-border-color: $divider-gray;

$hr-border: $gray-lightest;

$border-radius-small: 0px;
$border-radius-base: 0px;
$border-radius-large: 2px;


// Custom Mixins

@mixin triangle($direction, $color, $size: 1em, $ratio: 0.866) {
  @if not index(top right bottom left, $direction) {
    @error "Direction must be either `top`, `right`, `bottom` or `left`.";
  }

  display: inline-block;
  width: 0;
  height: 0;
  content: '';
  z-index: 2;
  border-#{opposite-position($direction)}: ($size * $ratio) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-borders;
    border-right:  $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top:    $perpendicular-borders;
  }
}

@function opposite-position($directions) {
  $opposite-directions: ();
  $direction-map: (
          'top':    'bottom',
          'right':  'left',
          'bottom': 'top',
          'left':   'right',
          'center': 'center'
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
    } @else {
      @warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
    }
  }

  @return $opposite-directions;
}